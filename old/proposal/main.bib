@inproceedings{DBLP:conf/podc/Jayanti98a,
  author    = {Prasad Jayanti},
  editor    = {Brian A. Coan and
               Yehuda Afek},
  title     = {A Time Complexity Lower Bound for Randomized Implementations of Some
               Shared Objects},
  booktitle = {Proceedings of the Seventeenth Annual {ACM} Symposium on Principles
               of Distributed Computing, {PODC} '98, Puerto Vallarta, Mexico, June
               28 - July 2, 1998},
  pages     = {201--210},
  publisher = {{ACM}},
  year      = {1998},
  url       = {https://doi.org/10.1145/277697.277735},
  doi       = {10.1145/277697.277735},
  timestamp = {Tue, 06 Nov 2018 11:07:19 +0100},
  biburl    = {https://dblp.org/rec/conf/podc/Jayanti98a.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@inproceedings{DBLP:conf/podc/ChandraJT98,
  author    = {Tushar Deepak Chandra and
               Prasad Jayanti and
               King Tan},
  editor    = {Brian A. Coan and
               Yehuda Afek},
  title     = {A Polylog Time Wait-Free Construction for Closed Objects},
  booktitle = {Proceedings of the Seventeenth Annual {ACM} Symposium on Principles
               of Distributed Computing, {PODC} '98, Puerto Vallarta, Mexico, June
               28 - July 2, 1998},
  pages     = {287--296},
  publisher = {{ACM}},
  year      = {1998},
  url       = {https://doi.org/10.1145/277697.277753},
  doi       = {10.1145/277697.277753},
  timestamp = {Tue, 06 Nov 2018 11:07:19 +0100},
  biburl    = {https://dblp.org/rec/conf/podc/ChandraJT98.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@inproceedings{DBLP:conf/podc/MichaelS96,
  author    = {Maged M. Michael and
               Michael L. Scott},
  editor    = {James E. Burns and
               Yoram Moses},
  title     = {Simple, Fast, and Practical Non-Blocking and Blocking Concurrent Queue
               Algorithms},
  booktitle = {Proceedings of the Fifteenth Annual {ACM} Symposium on Principles
               of Distributed Computing, Philadelphia, Pennsylvania, USA, May 23-26,
               1996},
  pages     = {267--275},
  publisher = {{ACM}},
  year      = {1996},
  url       = {https://doi.org/10.1145/248052.248106},
  doi       = {10.1145/248052.248106},
  timestamp = {Wed, 14 Nov 2018 10:51:56 +0100},
  biburl    = {https://dblp.org/rec/conf/podc/MichaelS96.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@article{DBLP:journals/dc/Ladan-MozesS08,
  author    = {Edya Ladan{-}Mozes and
               Nir Shavit},
  title     = {An optimistic approach to lock-free {FIFO} queues},
  journal   = {Distributed Comput.},
  volume    = {20},
  number    = {5},
  pages     = {323--341},
  year      = {2008},
  url       = {https://doi.org/10.1007/s00446-007-0050-0},
  doi       = {10.1007/s00446-007-0050-0},
  timestamp = {Fri, 13 Mar 2020 14:37:26 +0100},
  biburl    = {https://dblp.org/rec/journals/dc/Ladan-MozesS08.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@inproceedings{DBLP:conf/spaa/MoirNSS05,
  author    = {Mark Moir and
               Daniel Nussbaum and
               Ori Shalev and
               Nir Shavit},
  editor    = {Phillip B. Gibbons and
               Paul G. Spirakis},
  title     = {Using elimination to implement scalable and lock-free {FIFO} queues},
  booktitle = {{SPAA} 2005: Proceedings of the 17th Annual {ACM} Symposium on Parallelism
               in Algorithms and Architectures, July 18-20, 2005, Las Vegas, Nevada,
               {USA}},
  pages     = {253--262},
  publisher = {{ACM}},
  year      = {2005},
  url       = {https://doi.org/10.1145/1073970.1074013},
  doi       = {10.1145/1073970.1074013},
  timestamp = {Wed, 21 Nov 2018 11:12:26 +0100},
  biburl    = {https://dblp.org/rec/conf/spaa/MoirNSS05.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@inproceedings{DBLP:conf/opodis/HoffmanSS07,
  author    = {Moshe Hoffman and
               Ori Shalev and
               Nir Shavit},
  editor    = {Eduardo Tovar and
               Philippas Tsigas and
               Hac{\`{e}}ne Fouchal},
  title     = {The Baskets Queue},
  booktitle = {Principles of Distributed Systems, 11th International Conference,
               {OPODIS} 2007, Guadeloupe, French West Indies, December 17-20, 2007.
               Proceedings},
  series    = {Lecture Notes in Computer Science},
  volume    = {4878},
  pages     = {401--414},
  publisher = {Springer},
  year      = {2007},
  url       = {https://doi.org/10.1007/978-3-540-77096-1\_29},
  doi       = {10.1007/978-3-540-77096-1\_29},
  timestamp = {Tue, 14 May 2019 10:00:52 +0200},
  biburl    = {https://dblp.org/rec/conf/opodis/HoffmanSS07.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@inproceedings{DBLP:conf/spaa/MilmanKLLP18,
  author    = {Gal Milman and
               Alex Kogan and
               Yossi Lev and
               Victor Luchangco and
               Erez Petrank},
  editor    = {Christian Scheideler and
               Jeremy T. Fineman},
  title     = {{BQ:} {A} Lock-Free Queue with Batching},
  booktitle = {Proceedings of the 30th Symposium on Parallelism in Algorithms
               and Architectures, {SPAA} 2018, Vienna, Austria, July 16-18, 2018},
  pages     = {99--109},
  publisher = {{ACM}},
  year      = {2018},
  url       = {https://doi.org/10.1145/3210377.3210388},
  doi       = {10.1145/3210377.3210388},
  timestamp = {Wed, 21 Nov 2018 12:44:27 +0100},
  biburl    = {https://dblp.org/rec/conf/spaa/MilmanKLLP18.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@inproceedings{DBLP:conf/opodis/GidenstamST10,
  author    = {Anders Gidenstam and
               H{\aa}kan Sundell and
               Philippas Tsigas},
  editor    = {Chenyang Lu and
               Toshimitsu Masuzawa and
               Mohamed Mosbah},
  title     = {Cache-Aware Lock-Free Queues for Multiple Producers/Consumers and
               Weak Memory Consistency},
  booktitle = {Principles of Distributed Systems - 14th International Conference,
               {OPODIS} 2010, Tozeur, Tunisia, December 14-17, 2010. Proceedings},
  series    = {Lecture Notes in Computer Science},
  volume    = {6490},
  pages     = {302--317},
  publisher = {Springer},
  year      = {2010},
  url       = {https://doi.org/10.1007/978-3-642-17653-1\_23},
  doi       = {10.1007/978-3-642-17653-1\_23},
  timestamp = {Tue, 05 Nov 2019 12:22:56 +0100},
  biburl    = {https://dblp.org/rec/conf/opodis/GidenstamST10.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@inproceedings{DBLP:conf/ppopp/KoganP11,
  author    = {Alex Kogan and
               Erez Petrank},
  editor    = {Calin Cascaval and
               Pen{-}Chung Yew},
  title     = {Wait-free queues with multiple enqueuers and dequeuers},
  booktitle = {Proceedings of the 16th {ACM} {SIGPLAN} Symposium on Principles and
               Practice of Parallel Programming, {PPOPP} 2011, San Antonio, TX, USA,
               February 12-16, 2011},
  pages     = {223--234},
  publisher = {{ACM}},
  year      = {2011},
  url       = {https://doi.org/10.1145/1941553.1941585},
  doi       = {10.1145/1941553.1941585},
  timestamp = {Wed, 14 Nov 2018 10:55:57 +0100},
  biburl    = {https://dblp.org/rec/conf/ppopp/KoganP11.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@inproceedings{DBLP:conf/fsttcs/JayantiP05,
  author    = {Prasad Jayanti and
               Srdjan Petrovic},
  editor    = {Ramaswamy Ramanujam and
               Sandeep Sen},
  title     = {Logarithmic-Time Single Deleter, Multiple Inserter Wait-Free Queues
               and Stacks},
  booktitle = {{FSTTCS} 2005: Foundations of Software Technology and Theoretical
               Computer Science, 25th International Conference, Hyderabad, India,
               December 15-18, 2005, Proceedings},
  series    = {Lecture Notes in Computer Science},
  volume    = {3821},
  pages     = {408--419},
  publisher = {Springer},
  year      = {2005},
  url       = {https://doi.org/10.1007/11590156\_33},
  doi       = {10.1007/11590156\_33},
  timestamp = {Tue, 14 May 2019 10:00:51 +0200},
  biburl    = {https://dblp.org/rec/conf/fsttcs/JayantiP05.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}


@inproceedings{DBLP:conf/spaa/HendlerIST10,
  author    = {Danny Hendler and
               Itai Incze and
               Nir Shavit and
               Moran Tzafrir},
  editor    = {Friedhelm Meyer auf der Heide and
               Cynthia A. Phillips},
  title     = {Flat combining and the synchronization-parallelism tradeoff},
  booktitle = {{SPAA} 2010: Proceedings of the 22nd Annual {ACM} Symposium on Parallelism
               in Algorithms and Architectures, Thira, Santorini, Greece, June 13-15,
               2010},
  pages     = {355--364},
  publisher = {{ACM}},
  year      = {2010},
  url       = {https://doi.org/10.1145/1810479.1810540},
  doi       = {10.1145/1810479.1810540},
  timestamp = {Wed, 21 Nov 2018 11:15:55 +0100},
  biburl    = {https://dblp.org/rec/conf/spaa/HendlerIST10.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@article{DBLP:journals/corr/abs-2201-02179,
  author    = {Ruslan Nikolaev and
               Binoy Ravindran},
  title     = {wCQ: {A} Fast Wait-Free Queue with Bounded Memory Usage},
  journal   = {CoRR},
  volume    = {abs/2201.02179},
  year      = {2022},
  url       = {https://arxiv.org/abs/2201.02179},
  eprinttype = {arXiv},
  eprint    = {2201.02179},
  timestamp = {Mon, 10 Jan 2022 13:39:01 +0100},
  biburl    = {https://dblp.org/rec/journals/corr/abs-2201-02179.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}


@inproceedings{DBLP:conf/fsttcs/JayantiP05,
  author    = {Prasad Jayanti and
               Srdjan Petrovic},
  editor    = {Ramaswamy Ramanujam and
               Sandeep Sen},
  title     = {Logarithmic-Time Single Deleter, Multiple Inserter Wait-Free Queues
               and Stacks},
  booktitle = {{FSTTCS} 2005: Foundations of Software Technology and Theoretical
               Computer Science, 25th International Conference, Hyderabad, India,
               December 15-18, 2005, Proceedings},
  series    = {Lecture Notes in Computer Science},
  volume    = {3821},
  pages     = {408--419},
  publisher = {Springer},
  year      = {2005},
  url       = {https://doi.org/10.1007/11590156\_33},
  doi       = {10.1007/11590156\_33},
  timestamp = {Tue, 14 May 2019 10:00:51 +0200},
  biburl    = {https://dblp.org/rec/conf/fsttcs/JayantiP05.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@inproceedings{DBLP:conf/ppopp/MorrisonA13,
  author    = {Adam Morrison and
               Yehuda Afek},
  editor    = {Alex Nicolau and
               Xiaowei Shen and
               Saman P. Amarasinghe and
               Richard W. Vuduc},
  title     = {Fast concurrent queues for x86 processors},
  booktitle = {{ACM} {SIGPLAN} Symposium on Principles and Practice of Parallel Programming,
               PPoPP '13, Shenzhen, China, February 23-27, 2013},
  pages     = {103--112},
  publisher = {{ACM}},
  year      = {2013},
  url       = {https://doi.org/10.1145/2442516.2442527},
  doi       = {10.1145/2442516.2442527},
  timestamp = {Thu, 24 Jun 2021 16:19:30 +0200},
  biburl    = {https://dblp.org/rec/conf/ppopp/MorrisonA13.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}


@article{10.1145/114005.102808, author = {Herlihy, Maurice}, title = {Wait-Free Synchronization}, year = {1991}, issue_date = {Jan. 1991}, publisher = {Association for Computing Machinery}, address = {New York, NY, USA}, volume = {13}, number = {1}, issn = {0164-0925}, url = {https://doi.org/10.1145/114005.102808}, doi = {10.1145/114005.102808}, abstract = {A wait-free implementation of a concurrent data object is one that guarantees that any process can complete any operation in a finite number of steps, regardless of the execution speeds of the other processes. The problem of constructing a wait-free implementation of one data object from another lies at the heart of much recent work in concurrent algorithms, concurrent data structures, and multiprocessor architectures. First, we introduce a simple and general technique, based on reduction to a concensus protocol, for proving statements of the form, “there is no wait-free implementation of X by Y.” We derive a hierarchy of objects such that no object at one level has a wait-free implementation in terms of objects at lower levels. In particular, we show that atomic read/write registers, which have been the focus of much recent attention, are at the bottom of the hierarchy: thay cannot be used to construct wait-free implementations of many simple and familiar data types. Moreover, classical synchronization primitives such astest&set and fetch&add, while more powerful than read and write, are also computationally weak, as are the standard message-passing primitives. Second, nevertheless, we show that there do exist simple universal objects from which one can construct a wait-free implementation of any sequential object.}, journal = {ACM Trans. Program. Lang. Syst.}, month = {jan}, pages = {124–149}, numpages = {26}, keywords = {wait-free synchronization, linearization} }


@inproceedings{10.1007/978-3-642-41527-2_20, author = {Ellen, Faith and Woelfel, Philipp}, title = {An Optimal Implementation of Fetch-and-Increment}, year = {2013}, isbn = {9783642415265}, publisher = {Springer-Verlag}, address = {Berlin, Heidelberg}, url = {https://doi.org/10.1007/978-3-642-41527-2_20}, doi = {10.1007/978-3-642-41527-2_20}, abstract = {We present a new wait-free implementation of a Fetch&Inc object shared by n processes from read-write registers and load-linked/store-conditional LL/SC objects. The step complexity of each FI operation is Ologn, which is optimal. Our implementation uses O max {m,n} objects, each of which stores Ologm bits, where m is the number of FI operations that are performed. For large m, the number of objects can be reduced to On 2. Similar implementations of other objects, such as Fetch&Inc and Swap, are also obtained.Our implementation uses a new object, called an Aggregator. It supports an operation which, if successful, puts a value into its in-buffer that can depend on the value that is currently there, an operation that copies the value in its in-buffer to its out-buffer, provided its out-buffer is empty, and an operation that empties its out-buffer. We show how to implement an Aggregator from a small constant number of LL/SC objects so that all three operations have constant step complexity.}, booktitle = {Proceedings of the 27th International Symposium on Distributed Computing - Volume 8205}, pages = {284–298}, numpages = {15}, location = {Jerusalem, Israel}, series = {DISC 2013} }

@inproceedings{DBLP:conf/spaa/TsigasZ01,
  author    = {Philippas Tsigas and
               Yi Zhang},
  editor    = {Arnold L. Rosenberg},
  title     = {A simple, fast and scalable non-blocking concurrent {FIFO} queue for
               shared memory multiprocessor systems},
  booktitle = {Proceedings of the Thirteenth Annual {ACM} Symposium on Parallel Algorithms
               and Architectures, {SPAA} 2001, Heraklion, Crete Island, Greece, July
               4-6, 2001},
  pages     = {134--143},
  publisher = {{ACM}},
  year      = {2001},
  url       = {https://doi.org/10.1145/378580.378611},
  doi       = {10.1145/378580.378611},
  timestamp = {Wed, 21 Nov 2018 12:27:44 +0100},
  biburl    = {https://dblp.org/rec/conf/spaa/TsigasZ01.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@inproceedings{DBLP:conf/iceccs/ColvinG05,
  author    = {Robert Colvin and
               Lindsay Groves},
  title     = {Formal Verification of an Array-Based Nonblocking Queue},
  booktitle = {10th International Conference on Engineering of Complex Computer Systems
               {(ICECCS} 2005), 16-20 June 2005, Shanghai, China},
  pages     = {507--516},
  publisher = {{IEEE} Computer Society},
  year      = {2005},
  url       = {https://doi.org/10.1109/ICECCS.2005.49},
  doi       = {10.1109/ICECCS.2005.49},
  timestamp = {Wed, 16 Oct 2019 14:14:51 +0200},
  biburl    = {https://dblp.org/rec/conf/iceccs/ColvinG05.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@inproceedings{DBLP:conf/icdcn/Shafiei09,
  author    = {Niloufar Shafiei},
  editor    = {Vijay K. Garg and
               Roger Wattenhofer and
               Kishore Kothapalli},
  title     = {Non-blocking Array-Based Algorithms for Stacks and Queues},
  booktitle = {Distributed Computing and Networking, 10th International Conference,
               {ICDCN} 2009, Hyderabad, India, January 3-6, 2009. Proceedings},
  series    = {Lecture Notes in Computer Science},
  volume    = {5408},
  pages     = {55--66},
  publisher = {Springer},
  year      = {2009},
  url       = {https://doi.org/10.1007/978-3-540-92295-7\_10},
  doi       = {10.1007/978-3-540-92295-7\_10},
  timestamp = {Tue, 14 May 2019 10:00:42 +0200},
  biburl    = {https://dblp.org/rec/conf/icdcn/Shafiei09.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}
