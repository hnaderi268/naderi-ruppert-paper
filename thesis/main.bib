@inproceedings{DBLP:conf/stoc/AfekDT95,
	title        = {Wait-free made fast (Extended Abstract)},
	author       = {Yehuda Afek and Dalia Dauber and Dan Touitou},
	year         = 1995,
	booktitle    = {Proceedings of the Twenty-Seventh Annual {ACM} Symposium on Theory of Computing, 29 May-1 June 1995, Las Vegas, Nevada, {USA}},
	publisher    = {{ACM}},
	pages        = {538--547},
	doi          = {10.1145/225058.225271},
	url          = {https://doi.org/10.1145/225058.225271},
	editor       = {Frank Thomson Leighton and Allan Borodin},
	timestamp    = {Tue, 06 Nov 2018 11:07:04 +0100},
	biburl       = {https://dblp.org/rec/conf/stoc/AfekDT95.bib},
	bibsource    = {dblp computer science bibliography, https://dblp.org}
}
@inproceedings{DBLP:conf/afp/Okasaki96,
	title        = {Functional Data Structures},
	author       = {Chris Okasaki},
	year         = 1996,
	booktitle    = {Advanced Functional Programming, Second International School, Olympia, WA, USA, August 26-30, 1996, Tutorial Text},
	publisher    = {Springer},
	series       = {Lecture Notes in Computer Science},
	volume       = 1129,
	pages        = {131--158},
	doi          = {10.1007/3-540-61628-4\_5},
	url          = {https://doi.org/10.1007/3-540-61628-4\_5},
	editor       = {John Launchbury and Erik Meijer and Tim Sheard},
	timestamp    = {Tue, 14 May 2019 10:00:44 +0200},
	biburl       = {https://dblp.org/rec/conf/afp/Okasaki96.bib},
	bibsource    = {dblp computer science bibliography, https://dblp.org}
}
@inproceedings{DBLP:conf/opodis/AttiyaF17,
	title        = {Lower Bounds on the Amortized Time Complexity of Shared Objects},
	author       = {Hagit Attiya and Arie Fouren},
	year         = 2017,
	booktitle    = {21st International Conference on Principles of Distributed Systems, {OPODIS} 2017, Lisbon, Portugal, December 18-20, 2017},
	publisher    = {Schloss Dagstuhl - Leibniz-Zentrum f{\"{u}}r Informatik},
	series       = {LIPIcs},
	volume       = 95,
	pages        = {16:1--16:18},
	doi          = {10.4230/LIPIcs.OPODIS.2017.16},
	url          = {https://doi.org/10.4230/LIPIcs.OPODIS.2017.16},
	editor       = {James Aspnes and Alysson Bessani and Pascal Felber and Jo{\~{a}}o Leit{\~{a}}o},
	timestamp    = {Tue, 11 Feb 2020 15:52:14 +0100},
	biburl       = {https://dblp.org/rec/conf/opodis/AttiyaF17.bib},
	bibsource    = {dblp computer science bibliography, https://dblp.org}
}
@inproceedings{DBLP:conf/wdag/David04,
	title        = {A Single-Enqueuer Wait-Free Queue Implementation},
	author       = {Matei David},
	year         = 2004,
	booktitle    = {Distributed Computing, 18th International Conference, {DISC} 2004, Amsterdam, The Netherlands, October 4-7, 2004, Proceedings},
	publisher    = {Springer},
	series       = {Lecture Notes in Computer Science},
	volume       = 3274,
	pages        = {132--143},
	doi          = {10.1007/978-3-540-30186-8\_10},
	url          = {https://doi.org/10.1007/978-3-540-30186-8\_10},
	editor       = {Rachid Guerraoui},
	timestamp    = {Tue, 14 May 2019 10:00:54 +0200},
	biburl       = {https://dblp.org/rec/conf/wdag/David04.bib},
	bibsource    = {dblp computer science bibliography, https://dblp.org}
}
@article{10.1145/78969.78972,
	title        = {Linearizability: A Correctness Condition for Concurrent Objects},
	author       = {Herlihy, Maurice P. and Wing, Jeannette M.},
	year         = 1990,
	month        = {jul},
	journal      = {ACM Trans. Program. Lang. Syst.},
	publisher    = {Association for Computing Machinery},
	address      = {New York, NY, USA},
	volume       = 12,
	number       = 3,
	pages        = {463–492},
	doi          = {10.1145/78969.78972},
	issn         = {0164-0925},
	url          = {https://doi.org/10.1145/78969.78972},
	issue_date   = {July 1990},
	abstract     = {A concurrent object is a data object shared by concurrent processes. Linearizability is a correctness condition for concurrent objects that exploits the semantics of abstract data types. It permits a high degree of concurrency, yet it permits programmers to specify and reason about concurrent objects using known techniques from the sequential domain. Linearizability provides the illusion that each operation applied by concurrent processes takes effect instantaneously at some point between its invocation and its response, implying that the meaning of a concurrent object's operations can be given by pre- and post-conditions. This paper defines linearizability, compares it to other correctness conditions, presents and demonstrates a method for proving the correctness of implementations, and shows how to reason about concurrent objects, given they are linearizable.},
	numpages     = 30
}
@inproceedings{DBLP:conf/wdag/JayantiS21,
	title        = {Fast Arrays: Atomic Arrays with Constant Time Initialization},
	author       = {Siddhartha Jayanti and Julian Shun},
	year         = 2021,
	booktitle    = {35th International Symposium on Distributed Computing, {DISC} 2021, October 4-8, 2021, Freiburg, Germany (Virtual Conference)},
	publisher    = {Schloss Dagstuhl - Leibniz-Zentrum f{\"{u}}r Informatik},
	series       = {LIPIcs},
	volume       = 209,
	pages        = {25:1--25:19},
	doi          = {10.4230/LIPIcs.DISC.2021.25},
	url          = {https://doi.org/10.4230/LIPIcs.DISC.2021.25},
	editor       = {Seth Gilbert},
	timestamp    = {Wed, 03 Nov 2021 08:28:41 +0100},
	biburl       = {https://dblp.org/rec/conf/wdag/JayantiS21.bib},
	bibsource    = {dblp computer science bibliography, https://dblp.org}
}
@inproceedings{DBLP:conf/spaa/MilmanKLLP18,
	title        = {{BQ:} {A} Lock-Free Queue with Batching},
	author       = {Gal Milman and Alex Kogan and Yossi Lev and Victor Luchangco and Erez Petrank},
	year         = 2018,
	booktitle    = {Proceedings of the 30th Symposium on Parallelism in Algorithms and Architectures, {SPAA} 2018, Vienna, Austria, July 16-18, 2018},
	publisher    = {{ACM}},
	pages        = {99--109},
	doi          = {10.1145/3210377.3210388},
	url          = {https://doi.org/10.1145/3210377.3210388},
	editor       = {Christian Scheideler and Jeremy T. Fineman},
	timestamp    = {Wed, 21 Nov 2018 12:44:27 +0100},
	biburl       = {https://dblp.org/rec/conf/spaa/MilmanKLLP18.bib},
	bibsource    = {dblp computer science bibliography, https://dblp.org}
}
@inproceedings{DBLP:conf/podc/ChandraJT98,
	title        = {A Polylog Time Wait-Free Construction for Closed Objects},
	author       = {Tushar Deepak Chandra and Prasad Jayanti and King Tan},
	year         = 1998,
	booktitle    = {Proceedings of the Seventeenth Annual {ACM} Symposium on Principles of Distributed Computing, {PODC} '98, Puerto Vallarta, Mexico, June 28 - July 2, 1998},
	publisher    = {{ACM}},
	pages        = {287--296},
	doi          = {10.1145/277697.277753},
	url          = {https://doi.org/10.1145/277697.277753},
	editor       = {Brian A. Coan and Yehuda Afek},
	timestamp    = {Tue, 06 Nov 2018 11:07:19 +0100},
	biburl       = {https://dblp.org/rec/conf/podc/ChandraJT98.bib},
	bibsource    = {dblp computer science bibliography, https://dblp.org}
}
@inproceedings{DBLP:conf/spaa/TsigasZ01,
	title        = {A simple, fast and scalable non-blocking concurrent {FIFO} queue for shared memory multiprocessor systems},
	author       = {Philippas Tsigas and Yi Zhang},
	year         = 2001,
	booktitle    = {Proceedings of the Thirteenth Annual {ACM} Symposium on Parallel Algorithms and Architectures, {SPAA} 2001, Heraklion, Crete Island, Greece, July 4-6, 2001},
	publisher    = {{ACM}},
	pages        = {134--143},
	doi          = {10.1145/378580.378611},
	url          = {https://doi.org/10.1145/378580.378611},
	editor       = {Arnold L. Rosenberg},
	timestamp    = {Wed, 21 Nov 2018 12:27:44 +0100},
	biburl       = {https://dblp.org/rec/conf/spaa/TsigasZ01.bib},
	bibsource    = {dblp computer science bibliography, https://dblp.org}
}
@inproceedings{DBLP:conf/podc/Jayanti98a,
	title        = {A Time Complexity Lower Bound for Randomized Implementations of Some Shared Objects},
	author       = {Prasad Jayanti},
	year         = 1998,
	booktitle    = {Proceedings of the Seventeenth Annual {ACM} Symposium on Principles of Distributed Computing, {PODC} '98, Puerto Vallarta, Mexico, June 28 - July 2, 1998},
	publisher    = {{ACM}},
	pages        = {201--210},
	doi          = {10.1145/277697.277735},
	url          = {https://doi.org/10.1145/277697.277735},
	editor       = {Brian A. Coan and Yehuda Afek},
	timestamp    = {Tue, 06 Nov 2018 11:07:19 +0100},
	biburl       = {https://dblp.org/rec/conf/podc/Jayanti98a.bib},
	bibsource    = {dblp computer science bibliography, https://dblp.org}
}
@inproceedings{DBLP:conf/ppopp/YangM16,
	title        = {A wait-free queue as fast as fetch-and-add},
	author       = {Chaoran Yang and John M. Mellor{-}Crummey},
	year         = 2016,
	booktitle    = {Proceedings of the 21st {ACM} {SIGPLAN} Symposium on Principles and Practice of Parallel Programming, PPoPP 2016, Barcelona, Spain, March 12-16, 2016},
	publisher    = {{ACM}},
	pages        = {16:1--16:13},
	doi          = {10.1145/2851141.2851168},
	url          = {https://doi.org/10.1145/2851141.2851168},
	editor       = {Rafael Asenjo and Tim Harris},
	timestamp    = {Sun, 12 Jun 2022 19:46:08 +0200},
	biburl       = {https://dblp.org/rec/conf/ppopp/YangM16.bib},
	bibsource    = {dblp computer science bibliography, https://dblp.org}
}
@inproceedings{DBLP:conf/podc/BashariW21,
	title        = {An Efficient Adaptive Partial Snapshot Implementation},
	author       = {Benyamin Bashari and Philipp Woelfel},
	year         = 2021,
	booktitle    = {{PODC} '21: {ACM} Symposium on Principles of Distributed Computing, Virtual Event, Italy, July 26-30, 2021},
	publisher    = {{ACM}},
	pages        = {545--555},
	doi          = {10.1145/3465084.3467939},
	url          = {https://doi.org/10.1145/3465084.3467939},
	editor       = {Avery Miller and Keren Censor{-}Hillel and Janne H. Korhonen},
	timestamp    = {Mon, 26 Jul 2021 09:21:43 +0200},
	biburl       = {https://dblp.org/rec/conf/podc/BashariW21.bib},
	bibsource    = {dblp computer science bibliography, https://dblp.org}
}
@article{7073592,
	title        = {An Efficient Wait-Free Vector},
	author       = {Feldman, Steven and Valera-Leon, Carlos and Dechev, Damian},
	year         = 2016,
	journal      = {IEEE Transactions on Parallel and Distributed Systems},
	volume       = 27,
	number       = 3,
	pages        = {654--667},
	doi          = {10.1109/TPDS.2015.2417887}
}
@inproceedings{10.1007/978-3-642-41527-2_20,
	title        = {An Optimal Implementation of Fetch-and-Increment},
	author       = {Ellen, Faith and Woelfel, Philipp},
	year         = 2013,
	booktitle    = {Proceedings of the 27th International Symposium on Distributed Computing - Volume 8205},
	location     = {Jerusalem, Israel},
	publisher    = {Springer-Verlag},
	address      = {Berlin, Heidelberg},
	series       = {DISC 2013},
	pages        = {284–298},
	doi          = {10.1007/978-3-642-41527-2_20},
	isbn         = 9783642415265,
	url          = {https://doi.org/10.1007/978-3-642-41527-2_20},
	abstract     = {We present a new wait-free implementation of a Fetch&Inc object shared by n processes from read-write registers and load-linked/store-conditional LL/SC objects. The step complexity of each FI operation is Ologn, which is optimal. Our implementation uses O max {m,n} objects, each of which stores Ologm bits, where m is the number of FI operations that are performed. For large m, the number of objects can be reduced to On 2. Similar implementations of other objects, such as Fetch&Inc and Swap, are also obtained.Our implementation uses a new object, called an Aggregator. It supports an operation which, if successful, puts a value into its in-buffer that can depend on the value that is currently there, an operation that copies the value in its in-buffer to its out-buffer, provided its out-buffer is empty, and an operation that empties its out-buffer. We show how to implement an Aggregator from a small constant number of LL/SC objects so that all three operations have constant step complexity.},
	numpages     = 15
}
@article{DBLP:journals/dc/Ladan-MozesS08,
	title        = {An optimistic approach to lock-free {FIFO} queues},
	author       = {Edya Ladan{-}Mozes and Nir Shavit},
	year         = 2008,
	journal      = {Distributed Comput.},
	volume       = 20,
	number       = 5,
	pages        = {323--341},
	doi          = {10.1007/s00446-007-0050-0},
	url          = {https://doi.org/10.1007/s00446-007-0050-0},
	timestamp    = {Fri, 13 Mar 2020 14:37:26 +0100},
	biburl       = {https://dblp.org/rec/journals/dc/Ladan-MozesS08.bib},
	bibsource    = {dblp computer science bibliography, https://dblp.org}
}
@inproceedings{DBLP:conf/opodis/GidenstamST10,
	title        = {Cache-Aware Lock-Free Queues for Multiple Producers/Consumers and Weak Memory Consistency},
	author       = {Anders Gidenstam and H{\aa}kan Sundell and Philippas Tsigas},
	year         = 2010,
	booktitle    = {Principles of Distributed Systems - 14th International Conference, {OPODIS} 2010, Tozeur, Tunisia, December 14-17, 2010. Proceedings},
	publisher    = {Springer},
	series       = {Lecture Notes in Computer Science},
	volume       = 6490,
	pages        = {302--317},
	doi          = {10.1007/978-3-642-17653-1\_23},
	url          = {https://doi.org/10.1007/978-3-642-17653-1\_23},
	editor       = {Chenyang Lu and Toshimitsu Masuzawa and Mohamed Mosbah},
	timestamp    = {Tue, 05 Nov 2019 12:22:56 +0100},
	biburl       = {https://dblp.org/rec/conf/opodis/GidenstamST10.bib},
	bibsource    = {dblp computer science bibliography, https://dblp.org}
}
@inproceedings{DBLP:conf/ppopp/MorrisonA13,
	title        = {Fast concurrent queues for x86 processors},
	author       = {Adam Morrison and Yehuda Afek},
	year         = 2013,
	booktitle    = {{ACM} {SIGPLAN} Symposium on Principles and Practice of Parallel Programming, PPoPP '13, Shenzhen, China, February 23-27, 2013},
	publisher    = {{ACM}},
	pages        = {103--112},
	doi          = {10.1145/2442516.2442527},
	url          = {https://doi.org/10.1145/2442516.2442527},
	editor       = {Alex Nicolau and Xiaowei Shen and Saman P. Amarasinghe and Richard W. Vuduc},
	timestamp    = {Thu, 24 Jun 2021 16:19:30 +0200},
	biburl       = {https://dblp.org/rec/conf/ppopp/MorrisonA13.bib},
	bibsource    = {dblp computer science bibliography, https://dblp.org}
}
@inproceedings{DBLP:conf/spaa/HendlerIST10,
	title        = {Flat combining and the synchronization-parallelism tradeoff},
	author       = {Danny Hendler and Itai Incze and Nir Shavit and Moran Tzafrir},
	year         = 2010,
	booktitle    = {{SPAA} 2010: Proceedings of the 22nd Annual {ACM} Symposium on Parallelism in Algorithms and Architectures, Thira, Santorini, Greece, June 13-15, 2010},
	publisher    = {{ACM}},
	pages        = {355--364},
	doi          = {10.1145/1810479.1810540},
	url          = {https://doi.org/10.1145/1810479.1810540},
	editor       = {Friedhelm Meyer auf der Heide and Cynthia A. Phillips},
	timestamp    = {Wed, 21 Nov 2018 11:15:55 +0100},
	biburl       = {https://dblp.org/rec/conf/spaa/HendlerIST10.bib},
	bibsource    = {dblp computer science bibliography, https://dblp.org}
}
@inproceedings{DBLP:conf/iceccs/ColvinG05,
	title        = {Formal Verification of an Array-Based Nonblocking Queue},
	author       = {Robert Colvin and Lindsay Groves},
	year         = 2005,
	booktitle    = {10th International Conference on Engineering of Complex Computer Systems {(ICECCS} 2005), 16-20 June 2005, Shanghai, China},
	publisher    = {{IEEE} Computer Society},
	pages        = {507--516},
	doi          = {10.1109/ICECCS.2005.49},
	url          = {https://doi.org/10.1109/ICECCS.2005.49},
	timestamp    = {Wed, 16 Oct 2019 14:14:51 +0200},
	biburl       = {https://dblp.org/rec/conf/iceccs/ColvinG05.bib},
	bibsource    = {dblp computer science bibliography, https://dblp.org}
}
@inproceedings{DBLP:conf/stoc/GolabHW11,
	title        = {Linearizable implementations do not suffice for randomized distributed computation},
	author       = {Wojciech M. Golab and Lisa Higham and Philipp Woelfel},
	year         = 2011,
	booktitle    = {Proceedings of the 43rd {ACM} Symposium on Theory of Computing, {STOC} 2011, San Jose, CA, USA, 6-8 June 2011},
	publisher    = {{ACM}},
	pages        = {373--382},
	doi          = {10.1145/1993636.1993687},
	url          = {https://doi.org/10.1145/1993636.1993687},
	editor       = {Lance Fortnow and Salil P. Vadhan},
	timestamp    = {Tue, 06 Nov 2018 11:07:04 +0100},
	biburl       = {https://dblp.org/rec/conf/stoc/GolabHW11.bib},
	bibsource    = {dblp computer science bibliography, https://dblp.org}
}
@inproceedings{DBLP:conf/fsttcs/JayantiP05,
	title        = {Logarithmic-Time Single Deleter, Multiple Inserter Wait-Free Queues and Stacks},
	author       = {Prasad Jayanti and Srdjan Petrovic},
	year         = 2005,
	booktitle    = {{FSTTCS} 2005: Foundations of Software Technology and Theoretical Computer Science, 25th International Conference, Hyderabad, India, December 15-18, 2005, Proceedings},
	publisher    = {Springer},
	series       = {Lecture Notes in Computer Science},
	volume       = 3821,
	pages        = {408--419},
	doi          = {10.1007/11590156\_33},
	url          = {https://doi.org/10.1007/11590156\_33},
	editor       = {Ramaswamy Ramanujam and Sandeep Sen},
	timestamp    = {Tue, 14 May 2019 10:00:51 +0200},
	biburl       = {https://dblp.org/rec/conf/fsttcs/JayantiP05.bib},
	bibsource    = {dblp computer science bibliography, https://dblp.org}
}
@inproceedings{DBLP:conf/icdcn/Shafiei09,
	title        = {Non-blocking Array-Based Algorithms for Stacks and Queues},
	author       = {Niloufar Shafiei},
	year         = 2009,
	booktitle    = {Distributed Computing and Networking, 10th International Conference, {ICDCN} 2009, Hyderabad, India, January 3-6, 2009. Proceedings},
	publisher    = {Springer},
	series       = {Lecture Notes in Computer Science},
	volume       = 5408,
	pages        = {55--66},
	doi          = {10.1007/978-3-540-92295-7\_10},
	url          = {https://doi.org/10.1007/978-3-540-92295-7\_10},
	editor       = {Vijay K. Garg and Roger Wattenhofer and Kishore Kothapalli},
	timestamp    = {Tue, 14 May 2019 10:00:42 +0200},
	biburl       = {https://dblp.org/rec/conf/icdcn/Shafiei09.bib},
	bibsource    = {dblp computer science bibliography, https://dblp.org}
}
@inproceedings{DBLP:conf/podc/MichaelS96,
	title        = {Simple, Fast, and Practical Non-Blocking and Blocking Concurrent Queue Algorithms},
	author       = {Maged M. Michael and Michael L. Scott},
	year         = 1996,
	booktitle    = {Proceedings of the Fifteenth Annual {ACM} Symposium on Principles of Distributed Computing, Philadelphia, Pennsylvania, USA, May 23-26, 1996},
	publisher    = {{ACM}},
	pages        = {267--275},
	doi          = {10.1145/248052.248106},
	url          = {https://doi.org/10.1145/248052.248106},
	editor       = {James E. Burns and Yoram Moses},
	timestamp    = {Wed, 14 Nov 2018 10:51:56 +0100},
	biburl       = {https://dblp.org/rec/conf/podc/MichaelS96.bib},
	bibsource    = {dblp computer science bibliography, https://dblp.org}
}
@inproceedings{DBLP:conf/opodis/HoffmanSS07,
	title        = {The Baskets Queue},
	author       = {Moshe Hoffman and Ori Shalev and Nir Shavit},
	year         = 2007,
	booktitle    = {Principles of Distributed Systems, 11th International Conference, {OPODIS} 2007, Guadeloupe, French West Indies, December 17-20, 2007. Proceedings},
	publisher    = {Springer},
	series       = {Lecture Notes in Computer Science},
	volume       = 4878,
	pages        = {401--414},
	doi          = {10.1007/978-3-540-77096-1\_29},
	url          = {https://doi.org/10.1007/978-3-540-77096-1\_29},
	editor       = {Eduardo Tovar and Philippas Tsigas and Hac{\`{e}}ne Fouchal},
	timestamp    = {Tue, 14 May 2019 10:00:52 +0200},
	biburl       = {https://dblp.org/rec/conf/opodis/HoffmanSS07.bib},
	bibsource    = {dblp computer science bibliography, https://dblp.org}
}
@inproceedings{DBLP:conf/podc/KoganH14,
	title        = {The future(s) of shared data structures},
	author       = {Alex Kogan and Maurice Herlihy},
	year         = 2014,
	booktitle    = {{ACM} Symposium on Principles of Distributed Computing, {PODC} '14, Paris, France, July 15-18, 2014},
	publisher    = {{ACM}},
	pages        = {30--39},
	doi          = {10.1145/2611462.2611496},
	url          = {https://doi.org/10.1145/2611462.2611496},
	editor       = {Magn{\'{u}}s M. Halld{\'{o}}rsson and Shlomi Dolev},
	timestamp    = {Tue, 06 Nov 2018 11:07:19 +0100},
	biburl       = {https://dblp.org/rec/conf/podc/KoganH14.bib},
	bibsource    = {dblp computer science bibliography, https://dblp.org}
}
@inproceedings{DBLP:conf/spaa/MoirNSS05,
	title        = {Using elimination to implement scalable and lock-free {FIFO} queues},
	author       = {Mark Moir and Daniel Nussbaum and Ori Shalev and Nir Shavit},
	year         = 2005,
	booktitle    = {{SPAA} 2005: Proceedings of the 17th Annual {ACM} Symposium on Parallelism in Algorithms and Architectures, July 18-20, 2005, Las Vegas, Nevada, {USA}},
	publisher    = {{ACM}},
	pages        = {253--262},
	doi          = {10.1145/1073970.1074013},
	url          = {https://doi.org/10.1145/1073970.1074013},
	editor       = {Phillip B. Gibbons and Paul G. Spirakis},
	timestamp    = {Wed, 21 Nov 2018 11:12:26 +0100},
	biburl       = {https://dblp.org/rec/conf/spaa/MoirNSS05.bib},
	bibsource    = {dblp computer science bibliography, https://dblp.org}
}
@inproceedings{DBLP:conf/ppopp/KoganP11,
	title        = {Wait-free queues with multiple enqueuers and dequeuers},
	author       = {Alex Kogan and Erez Petrank},
	year         = 2011,
	booktitle    = {Proceedings of the 16th {ACM} {SIGPLAN} Symposium on Principles and Practice of Parallel Programming, {PPOPP} 2011, San Antonio, TX, USA, February 12-16, 2011},
	publisher    = {{ACM}},
	pages        = {223--234},
	doi          = {10.1145/1941553.1941585},
	url          = {https://doi.org/10.1145/1941553.1941585},
	editor       = {Calin Cascaval and Pen{-}Chung Yew},
	timestamp    = {Wed, 14 Nov 2018 10:55:57 +0100},
	biburl       = {https://dblp.org/rec/conf/ppopp/KoganP11.bib},
	bibsource    = {dblp computer science bibliography, https://dblp.org}
}
@article{10.1145/114005.102808,
	title        = {Wait-Free Synchronization},
	author       = {Herlihy, Maurice},
	year         = 1991,
	month        = {jan},
	journal      = {ACM Trans. Program. Lang. Syst.},
	publisher    = {Association for Computing Machinery},
	address      = {New York, NY, USA},
	volume       = 13,
	number       = 1,
	pages        = {124–149},
	doi          = {10.1145/114005.102808},
	issn         = {0164-0925},
	url          = {https://doi.org/10.1145/114005.102808},
	issue_date   = {Jan. 1991},
	abstract     = {A wait-free implementation of a concurrent data object is one that guarantees that any process can complete any operation in a finite number of steps, regardless of the execution speeds of the other processes. The problem of constructing a wait-free implementation of one data object from another lies at the heart of much recent work in concurrent algorithms, concurrent data structures, and multiprocessor architectures. First, we introduce a simple and general technique, based on reduction to a concensus protocol, for proving statements of the form, “there is no wait-free implementation of X by Y.” We derive a hierarchy of objects such that no object at one level has a wait-free implementation in terms of objects at lower levels. In particular, we show that atomic read/write registers, which have been the focus of much recent attention, are at the bottom of the hierarchy: thay cannot be used to construct wait-free implementations of many simple and familiar data types. Moreover, classical synchronization primitives such astest&set and fetch&add, while more powerful than read and write, are also computationally weak, as are the standard message-passing primitives. Second, nevertheless, we show that there do exist simple universal objects from which one can construct a wait-free implementation of any sequential object.},
	numpages     = 26,
	keywords     = {wait-free synchronization, linearization}
}
@article{DBLP:journals/corr/abs-2201-02179,
	title        = {{wCQ}: {A} Fast Wait-Free Queue with Bounded Memory Usage},
	author       = {Ruslan Nikolaev and Binoy Ravindran},
	year         = 2022,
	journal      = {CoRR},
	volume       = {abs/2201.02179},
	url          = {https://arxiv.org/abs/2201.02179},
	eprinttype   = {arXiv},
	eprint       = {2201.02179},
	timestamp    = {Mon, 10 Jan 2022 13:39:01 +0100},
	biburl       = {https://dblp.org/rec/journals/corr/abs-2201-02179.bib},
	bibsource    = {dblp computer science bibliography, https://dblp.org}
}
